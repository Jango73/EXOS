
---------------------------------------------------------------------------------------------------

4 - TCP - Transmission Control Protocol

TCP PCI

Source Port (2 bytes)

Destination Port (2 bytes)

Sequence Number (4 bytes)

Acknowledgment Number (4 bytes)

Data Offset (4 bits)

Control Flags (6 bits)

Window (2 bytes)

Checksum (2 bytes)

Urgent Pointer (2 bytes)

Options (n bytes)

Padding (0-3 bytes)

---------------------------------------------------------------------------------------------------

TCP PCI

4 - Transmission Control Protocol

TCP is a connection-oriented transport protocol that provides data flow control and acknowledgment.
Connectionless transport services are provided by UDP. Both protocols can detect loss of packets by
using packet sequence numbers. 

TCP is used by applications like TELNET and FTP, UDP by SNMP.

4 - UDP - User Datagram Protocol

Literature/Sources:

TCP

---------------------------------------------------------------------------------------------------

Source Port (2 bytes)

Protocol: TCP TCP PCI

Field: source port

Length: 2 bytes

Contents: source process ID.

Since TCP/IP were implemented on Unix machines at the University of California, Berkelay, USA, the
so-called BSD sockets are used.

TCP - Ports / Sockets

---------------------------------------------------------------------------------------------------

Destination Port (2 bytes)

Protocol: TCP TCP PCI

Field: destination port

Length: 2 bytes

Contents: destination process ID.

Since TCP/IP were implemented on Unix machines at the University of California, Berkelay, USA, the
so-called BSD sockets are used.

TCP - Ports / Sockets

---------------------------------------------------------------------------------------------------

Sequence Number (4 bytes)

Protocol: TCP TCP PCI

Field: sequence number

Length: 4 bytes

Contents: packet sequence number.

The sequence number sent by the source station has to be acknowledged by the following
acknowledgment number (and vice versa).

---------------------------------------------------------------------------------------------------

Acknowledgment Number (4 bytes)

Protocol: TCP TCP PCI

Field: acknowledgment number

Length: 4 bytes

Contents: packet acknowledgment number.

The sequence number sent by the source station has to be acknowledged by the following
acknowledgment number (and vice versa).

---------------------------------------------------------------------------------------------------

Data Offset (4 bits)

Protocol: TCP TCP PCI

Field: data offset

Length: 4 bits

Contents: length of TCP header.

Since the length of TCP headers may vary (other than UDP PDUs), ist length must be indicated. This
value is a pointer to the beginning of the data field.

---------------------------------------------------------------------------------------------------

Control Flags (6 bits)

Protocol: TCP TCP PCI

Field: control flags

Length: 6 bits

Contents: operation control flags.

1. URG: Urgent Pointer field significant

The urgent pointer field must be processed.

Urgent Pointer (2 bytes)

2. ACK: Acknowledgment field significant

The acknowledgment field bust be processed.

Acknowledgment Number (4 bytes)

3. PSH: Push Function

Data must be passed immediately to destination process.

3. RST: Reset the connection

Indicates that the connection will be closed.

3. SYN: Synchronize sequence numbers

Indicates request for connection setup.

The 'maximum segment size' option must be processed (if any).

Options (n bytes)

3. FIN: No more data from sender

Indicates finally the end of a connection.

---------------------------------------------------------------------------------------------------

Window (2 bytes)

Protocol: TCP TCP PCI

Field: window

Length: 2 bytes

Contents: buffer size.

The number of data octets beginning with the one indicated in the acknowledgment field which the
sender of this segment is willing to accept.

---------------------------------------------------------------------------------------------------

Checksum (2 bytes)

Protocol: TCP TCP PCI

Field: checksum

Length: 2 bytes

Contents: checksum covering TCP header, and data.

The checksum also covers a 96 bit pseudo header conceptually prefixed to the TCP header. This
pseudo header contains the Source Address, the Destination Address, the Protocol, and TCP length.
This gives the TCP protection against misrouted segments. This information is carried in the Internet
Protocol and is transferred across the TCP/Network interface in the arguments or results of calls by
the TCP on the IP. 

The TCP Length is the TCP header length plus the data length in octets (this is not an explicitly
transmitted quantity, but is computed), and it does not count the 12 octets of the pseudo header.

---------------------------------------------------------------------------------------------------

Urgent Pointer (2 bytes)

Protocol: TCP TCP PCI

Field: urgent pointer

Length: 2 bytes

Contents: urgend data indicator.

This field communicates the current value of the urgent pointer as a positive offset from the sequence
number in this segment. The urgent pointer points to the sequence number of the octet following the
urgent data. This field is only be interpreted in segments with the URG control bit set. 

---------------------------------------------------------------------------------------------------

Options (n bytes)

Protocol: TCP TCP PCI

Field: options

Length: n bytes

Contents: TCP options.

Options may occupy space at the end of the TCP header and are a multiple of 8 bits in length. All
options are included in the checksum. An option may begin on any octet boundary. There are two cases
for the format of an option: 

Case 1: A single octet of option-kind.

Case 2: An octet of option-kind, an octet of option-length, and the actual option-data octets.

The option-length counts the two octets of option-kind and option-length as well as the option-data
octets.

Note that the list of options may be shorter than the data offset field might imply. The content of the
header beyond the End-of-Option option must be header padding (i.e., zero).

A TCP must implement all options.

Currently defined options include (kind indicated in octal):

Kind Length Meaning

---- ------ ----------------------

0 - End of option list.

1 - No-Operation.

2 4 Maximum Segment Size.

Specific Option Definitions

End of Option List

a

This option code indicates the end of the option list. This might not coincide with the end of the TCP
header according to the Data Offset field. This is used at the end of all options, not the end of each
option, and need only be used if the end of the options would not otherwise coincide with the end of the
TCP header. 

No-Operation

a

This option code may be used between options, for example, to align the beginning of a subsequent
option on a word boundary. There is no guarantee that senders will use this option, so receivers must be
prepared to process options even if they do not begin on a word boundary. 

Maximum Segment Size

a

Maximum Segment Size Option Data: 16 bits

If this option is present, then it communicates the maximum receive segment size at the TCP which
sends this segment. This field must only be sent in the initial connection request (i.e., in segments with
the SYN control bit set). If this option is not used, any segment size is allowed. 

---------------------------------------------------------------------------------------------------

Padding (0-3 bytes)

Protocol: TCP TCP PCI

Field: padding

Length: 0-3 bytes

Contents: padding bytes.

The TCP header padding is used to ensure that the TCP header ends and data begins on a 32 bit
boundary. The padding is composed of zeros.

---------------------------------------------------------------------------------------------------

TCP - Ports / Sockets

The following port IDs are well-known ports (BDS sockets).

dec. Protocol

---- ----------------------------------------------------------------

0000 .. (reserved)

0001-

0004 .. (reserved)

0005 RJE Remote Job Entry

0007 ECHO Echo

0011 USERS Active Users

0013 DAYTIME Daytime

0015 .. (unassigned)

0017 QUOTE Quote of the Day

0019 CHARGEN Character Generator

0021 FTP File Transfer Protocol

0023 TELNET Teletype Network 

0025 SMTP Simple Mail Transfer Protocol

0027 NSW-FE NSW User System FE

0029 MSG-ICP MSG ICP

0031 MSG-AUTH MSG Authentication

0033 DSP Display Support Protocol

0035 .. (any private printer server)

0037 TIME Time

0039 RLP Resource Location Protocol

0041 GRAPHICS Graphics

0042 NAMESERVER Host Name Server

0043 NICNAME Who Is

0044 MPM-FLAGS MPM Flags Protocol

0045 MPM MPM

0046 MPM-SEND MPM (default send)

0047 NI-FTP NI FTP

0049 LOGIN Login Host Protocol

0051 LA-MAINT IMP Logical Address Maintenance

0053 DOMAIN Domain Name Server

0055 ISI-GL ISI Graphics Language

0057 .. (any private terminal access)

0059 .. (any private file service)

0061 NI-MAIL NI MAIL

0063 VIA-FTP VIA Systems FTP

0065 TACACS-DS TACACS Database Service

0067 BOOTPS Bootstrap Protocol Server

0068 BOOTPC Bootstrap Protocol Client

0069 TFTP Trivial File Transfer Protocol

0071 NETRJS-1 Remote Job Service 1

0072 NETRJS-2 Remote Job Service 2

0073 NETRJS-3 Remote Job Service 3

0074 NETRJS-4 Remote Job Service 4

0075 .. (any private dial out service)

0077 .. (any private RJE service)

0079 FINGER Finger

0081 HOST2-NS Host2 Name Server

0083 MIT-ML-DEV MIT ML Device

0085 MIT-ML-DEV MIT ML Device

0087 .. (any private link)

0089 SU-MIT-TG SU/MIT Telnet Gateway

0091 MIT-DOV MIT Doover Spooler

0093 DCP Device Control Protocol

0095 SUPSUP SUPDUP

0097 SWIFT-RVJ Swift Remote Virtual File Protocol

0099 METAGRAM Metagram Delay

0101 HOSTNAME NIC Host Name Server

0102 ISO-TSAP ISO TSAP

0103 X.400 X.400

0104 X.400-SND X.400-SND

0105 CSNET-IS Mailbox Name NameServer

0107 RTELNET Remote Telnet Service

0109 POP-2 Post Office Protocol, Version 2

0111 SunRPC SUN Remote Procedure Call Port Map

0113 AUTH Authentication Service

0115 SFTP Simple Mail File Transfer Protocol

0117 UUCP-PATH UUCP Path Service

0119 NNTP Network News Transfer Protocol

0121 ERPC HYDRA Expedited Remote Procedure

0123 NTP Network Time Protocol

0125 LOCUS-MAP Locus PC-Interface Net Map Server

0127 LOCUS-CON Locus Interface Conn Server

0129 PWDGEN Passwort Generator Protocol

0130 CISCO-FNA CISCO FNATIVE

0131 CISCO-TNA CICSO TNATIVE

0132 CISCO-SYS CISCO SYSMAINT

0133 STATSRV Statistics Service

0134 INGRES-NET INGRES NET Service

0135 LOC-SRV Location Service

0136 PROFILE PROFILE Naming System

0137 NETBIOS-NS NETBIOS Name Service

0138 NETBIOS-DGM NETBIOS Datagram Service

0139 NETBIOS-SSN NETBIOS Session Service

0140 EMFIS-DATA EMFIS Data Service

0141 EMFIS-CNTL EMFIS Control Service

0142 BL-IDM Britton-Lee IDM

0143-

0159 .. (unassigned)

0160-

0223 .. (reserved)

0224-

0241 .. (unassigned)

0243 SUR-MEAS Survey Measurement

0245 LINK LINK

0247-

0255 .. (unassigned)

0512 rexec Remote Exec

0513 rlogin Remote Login

0514 remshell Remote Shell

0515 lpr Remote Print

0721 .. Unix 

0900 .. Unix printer

1260 .. rlb

1536 .. NFT

1537 .. VT

1538 .. Reverse VT

1540 .. PTOP

1542 .. RPM

2105 .. NInstall

2560 .. RFA

2561 .. RDBA

4672 .. RFA (UX)

---------------------------------------------------------------------------------------------------
